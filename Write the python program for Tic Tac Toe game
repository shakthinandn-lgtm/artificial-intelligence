def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("-" * 9)

def check_winner(board, player):
    # Check rows, columns and diagonals
    for i in range(3):
        if all(board[i][j] == player for j in range(3)):  # row
            return True
        if all(board[j][i] == player for j in range(3)):  # column
            return True
    if all(board[i][i] == player for i in range(3)):      # diagonal
        return True
    if all(board[i][2-i] == player for i in range(3)):    # anti-diagonal
        return True
    return False

def is_full(board):
    return all(cell != " " for row in board for cell in row)

def tic_tac_toe():
    board = [[" " for _ in range(3)] for _ in range(3)]
    players = ["X", "O"]
    turn = 0

    print("Welcome to Tic Tac Toe!\n")
    print_board(board)

    while True:
        player = players[turn % 2]
        print(f"\nPlayer {player}'s turn.")

        try:
            row = int(input("Enter row (0-2): "))
            col = int(input("Enter col (0-2): "))
        except ValueError:
            print("Invalid input! Please enter numbers 0, 1, or 2.")
            continue

        if row not in [0,1,2] or col not in [0,1,2] or board[row][col] != " ":
            print("Invalid move! Try again.")
            continue

        board[row][col] = player
        print_board(board)

        if check_winner(board, player):
            print(f"\nðŸŽ‰ Player {player} wins!")
            break
        if is_full(board):
            print("\nIt's a draw!")
            break

        turn += 1

if __name__ == "__main__":
    tic_tac_toe()
